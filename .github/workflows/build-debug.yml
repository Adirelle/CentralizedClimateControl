name: build

on:
  push:
    branches:
      - 2.*
    tags:
      - 2.*

env:
  MOD_NAME: CentralizedClimateControl

jobs:
  build:
    name: build
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Install dependencies
      working-directory: Source/CentralizedClimateControl
      run: dotnet restore
    - name: Build the assembly
      working-directory: Source/CentralizedClimateControl
      run: dotnet build --configuration Release --no-restore
    - name: Extract the version string
      id: version
      shell: bash
      run: |
        VERSION="$(git describe --always)"
        echo "::set-output name=version::${VERSION%-g*}"
    - name: Create the distribution
      shell: bash
      run: |
        mkdir -p "dist/$MOD_NAME"
        cp -av *.md 1.3 About Languages Textures "dist/$MOD_NAME/"
        rm -rfv "dist/$MOD_NAME/Textures/Things/Updates"
        sed -i -e 's/2.0.0.0/${{ steps.version.outputs.version }}/' "dist/$MOD_NAME/About/"*.xml
    - name: Upload the distribution
      uses: actions/upload-artifact@v2
      with:
        name: distribution
        path: dist/

  release:
    name: release
    needs: build
    runs-on: windows-latest
    steps:
    - name: Download the distribution
      uses: actions/download-artifact@v2
    - name: Create the package
      uses: thedoctor0/zip-release@master
      with:
        type: zip
        directory: dist/
        path: ${{ env.MOD_NAME }}/
        filename: ${{ env.MOD_NAME }}.zip
    - name: Create the release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ needs.build.outputs.version }}
        tag: ${{ needs.build.outputs.version }}
        commit: ${{ github.sha }}
        draft: false
        prerelease: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        bodyFile: dist/${{ env.MOD_NAME }}/About/Changelog.txt
        artifacts: dist//${{ env.MOD_NAME }}.zip
        artifactContentType: application/zip
        token: ${{ github.token }}
        allowUpdates: true
        replacesArtifacts: true
